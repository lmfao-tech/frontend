/* Title attribute as tip */
[data-tip] {
    position: relative;
    z-index: 100 !important;
  }
  /* Positioning and visibility settings of the tip */
  [data-tip]::before,
  [data-tip]::after {

    position: absolute;
    left: 50%;
    bottom: calc(100% + 5px); /* 5px is the size of the arrow */
  
    opacity: 0;
    visibility: hidden;
    pointer-events: none;
  
    transition: 0.3s;
    will-change: transform;
  }
  /* The actual tip with a dynamic width */
  [data-tip]::before {
    content: attr(data-tip);
  
    /*min-width: 50px;*/
    /*max-width: 300px;*/
    width: max-content;
    width: -moz-max-content;
  
    padding: 10px 18px;
    border-radius: 10px;
    background-color: rgba(50, 50, 50, 1);
    box-shadow: var(--default-box-shadow);
  
    color: #fff;
    font-size: 0.75rem;
    text-align: center;
    white-space: pre-wrap;
  
    transform: translate(-50%, -5px) scale(0.5);
  }
  /* tip arrow */
  [data-tip]::after {
    content: '';
    border-style: solid;
    border-width: 5px 5px 0 5px; /* CSS triangle */
    border-color: rgba(50, 50, 50, 1) transparent transparent transparent;
  
    transform-origin: top;   /* Orientation setting for the slide-down effect */
    transition-duration: 0s; /* If the mouse leaves the element, the transition effects for the tip arrow are "turned off" */
    transform: translateX(-50%) scaleY(0);
  }
  /* tip becomes visible at hover */
  [data-tip]:hover::before,
  [data-tip]:hover::after {
    visibility: visible;
    opacity: 1;
  }
  /* Scales from 0.5 to 1 -> grow effect */
  [data-tip]:hover::before {
    transition-delay: 0.3s;
    transform: translate(-50%, -5px) scale(1);
  }
  /* Arrow slide down effect only on mouseenter (NOT on mouseleave) */
  [data-tip]:hover::after {
    transition-delay: 0.5s; /* Starting after the grow effect */
    transition-duration: 0.2s;
    transform: translateX(-50%) scaleY(1);
  }
  
  /* *** That's it for the basic tip. If you want some adjustability here are some orientation settings you can use: *** */
  
  /* LEFT */
  /* tip + arrow */
  [data-place="left"]::before,
  [data-place="left"]::after {
    left: auto;
    bottom: 50%;
    right: calc(100% + 5px);
  }
  /* tip */
  [data-place="left"]::before {
    transform: translate(-5px, 50%) scale(0.5);
  }
  [data-place="left"]:hover::before {
    transform: translate(-5px, 50%) scale(1);
  }
  /* Arrow */
  [data-place="left"]::after {
    border-width: 5px 0 5px 5px;
    border-color: transparent transparent transparent rgba(50, 50, 50, 1);
    transform-origin: left;
    transform: translateY(50%) scaleX(0);
  }
  [data-place="left"]:hover::after {
    transform: translateY(50%) scaleX(1);
  }
  
  /* RIGHT */
  [data-place="right"]::before,
  [data-place="right"]::after {
    bottom: 50%;
    left: calc(100% + 5px);
  }
  [data-place="right"]::before {
    transform: translate(5px, 50%) scale(0.5);
  }
  [data-place="right"]:hover::before {
    transform: translate(5px, 50%) scale(1);
  }
  [data-place="right"]::after {
    border-width: 5px 5px 5px 0;
    border-color: transparent rgba(50, 50, 50, 1) transparent transparent;
    transform-origin: right;
    transform: translateY(50%) scaleX(0);
  }
  [data-place="right"]:hover::after {
    transform: translateY(50%) scaleX(1);
  }
  
  /* BOTTOM */
  [data-place="bottom"]::before,
  [data-place="bottom"]::after {
    top: calc(100% + 5px);
    bottom: auto;
  }
  [data-place="bottom"]::before {
    transform: translate(-50%, 5px) scale(0.5);
  }
  [data-place="bottom"]:hover::before {
    transform: translate(-50%, 5px) scale(1);
  }
  [data-place="bottom"]::after {
    transform-origin: bottom;
    border-width: 0 5px 5px 5px;
    border-color: transparent transparent rgba(50, 50, 50, 1) transparent;
  }
